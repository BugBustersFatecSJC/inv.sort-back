generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
    url      = env("DATABASE_URL")
}

enum Role {
  admin
  gerente
  funcionario
}

enum Status {
  ativo
  inativo
}

enum UnitType {
  un
  kg
  lt
}

enum Action {
  INSERT
  UPDATE
  DELETE
}

enum MovementType {
  entrada
  saida
}

model User {
  user_id        Int             @id @default(autoincrement())
  username       String          @unique @db.VarChar(50)
  email          String          @unique @db.VarChar(255)
  password       String          @db.VarChar(255)
  role           Role
  created_at     DateTime        @default(now()) @db.Timestamp(6)
  status         Status          @default(ativo)
  user_img       String?         @db.Text

  auditLogs      AuditLog[]
  stockMovements StockMovement[]
}

model Category {
  category_id    Int       @id @default(autoincrement())
  category_name  String    @unique @db.VarChar(50)
  category_image String?   @db.Text

  products       Product[]

  @@index([category_name], name: "idx_category_name")
}

model Supplier {
  supplier_id    Int       @id @default(autoincrement())
  supplier_name  String    @unique @db.VarChar(100)
  contact_info   String?   @db.VarChar(255)
  supplier_img   String?   @db.Text
  address        String?   @db.VarChar(255)

  products       Product[]

  @@index([supplier_name], name: "idx_supplier_name")
}

model ProductUnit {
  unit_id    Int        @id @default(autoincrement())
  unit_type  UnitType

  products   Product[]
}

model Product {
  product_id        Int          @id @default(autoincrement())
  product_name      String       @db.VarChar(100)
  description       String?      @db.Text
  product_img       String?      @db.Text
  category_id       Int?
  prod_brand        String?      @db.VarChar(100)
  prod_model        String?      @db.VarChar(100)
  supplier_id       Int?
  unit_id           Int?
  is_perishable     Boolean      @default(false)
  created_at        DateTime     @default(now()) @db.Timestamp(6)
  prod_cost_value   Decimal?     @db.Decimal(10, 2)
  prod_sell_value   Decimal?     @db.Decimal(10, 2)

  category          Category?    @relation(fields: [category_id], references: [category_id])
  supplier          Supplier?    @relation(fields: [supplier_id], references: [supplier_id])
  unit              ProductUnit? @relation(fields: [unit_id], references: [unit_id])
  batches           Batch[]

  @@index([product_name], name: "idx_product_name")
  @@index([category_id], name: "idx_products_category")
  @@index([supplier_id], name: "idx_products_supplier")
  @@index([unit_id], name: "idx_products_unit")
}

model Sector {
  sector_id    Int      @id @default(autoincrement())
  sector_name  String   @db.VarChar(255)

  locals       Local[]
}

model Local {
  local_id      Int     @id @default(autoincrement())
  sector_id     Int
  local_name    String? @db.VarChar(100)
  local_address String? @db.VarChar(255)

  sector        Sector  @relation(fields: [sector_id], references: [sector_id])
}

model AuditLog {
  log_id             Int       @id @default(autoincrement())
  user_id            Int
  action             Action
  table_name         String    @db.VarChar(50)
  primary_key_value  String    @db.VarChar(255)
  old_value          Json?
  new_value          Json?
  action_date        DateTime  @default(now()) @db.Timestamp(6)

  
  product_id         Int?
  product_name       String? 
  category_id        Int?
  category_name      String?  
  supplier_id        Int?
  supplier_name      String?
  unit_id            Int?
  sector_id          Int?
  local_id           Int?
  batch_id           Int?

  user               User      @relation(fields: [user_id], references: [user_id])
  product            Product?     @relation(fields: [product_id], references: [product_id])
  category           Category?    @relation(fields: [category_id], references: [category_id])
  supplier           Supplier?    @relation(fields: [supplier_id], references: [supplier_id])
  unit               ProductUnit? @relation(fields: [unit_id], references: [unit_id])
  sector             Sector?      @relation(fields: [sector_id], references: [sector_id])
  local              Local?       @relation(fields: [local_id], references: [local_id])
  batch              Batch?       @relation(fields: [batch_id], references: [batch_id])
}

model Batch {
  batch_id           Int             @id @default(autoincrement())
  product_id         Int
  quantity           Int
  expiration_date    DateTime?       @db.Date
  manufacture_date   DateTime?       @db.Date
  batch_value_total  Decimal?        @db.Decimal(10, 2)

  product            Product         @relation(fields: [product_id], references: [product_id])
  stock_movements    StockMovement[]

  @@index([product_id], name: "idx_batches_product")
}

model StockMovement {
  movement_id    Int           @id @default(autoincrement())
  batch_id       Int
  quantity       Int
  movement_type  MovementType
  movement_date  DateTime      @default(now()) @db.Timestamp(6)
  user_id        Int

  batch          Batch         @relation(fields: [batch_id], references: [batch_id])
  user           User          @relation(fields: [user_id], references: [user_id])

  @@index([batch_id], name: "idx_stock_movements_batch")
  @@index([user_id], name: "idx_stock_movements_user")
  @@index([movement_type], name: "idx_stock_movements_type")
}